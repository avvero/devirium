name: Send Notes on Commit

on:
  push:
    paths:
      - '**/*.md'

jobs:
  send-notes:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.16'

      - name: Compile find-links
        run: |
          echo "Compiling script/find-links.go"
          go build -o script/find-links script/find-links.go

      - name: Check links in changed files
        id: check-links
        run: |
          #!/bin/bash

          set -e

          # Get the list of changed files
          if git rev-parse HEAD~1 >/dev/null 2>&1; then
            git diff --name-only -z --diff-filter=ACM HEAD~1 HEAD -- '*.md' > changed_files.txt
          else
            git ls-tree --name-only -r -z HEAD -- '*.md' > changed_files.txt
          fi

          # Display file names and check links
          while IFS= read -r -d '' file; do
            if [[ -n "$file" ]]; then
              echo "Checking links in file: $file"
              ./script/find-links "$file" || { echo "Error processing file $file with script/find-links.go"; exit 1; }
              echo ""
            fi
          done < changed_files.txt

      - name: Send notification on failure
        if: failure()
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          #!/bin/bash

          send_telegram_message() {
            local message=$1
            curl -s -X POST "https://api.telegram.org/$TELEGRAM_TOKEN/sendMessage" \
              -H "Content-Type: application/json" \
              -d "{\"chat_id\":\"$TELEGRAM_CHAT_ID\", \"text\":\"$message\"}" > /dev/null
          }

          send_telegram_message "Error: Link checking failed in one of the files."

      - name: List and send changed files
        if: success()
        env:
          SEND_NOTES_URL: ${{ secrets.SEND_NOTES_URL }}
        run: |
          #!/bin/bash

          set -e

          # Get the list of changed files
          if git rev-parse HEAD~1 >/dev/null 2>&1; then
            git diff --name-only -z --diff-filter=ACM HEAD~1 HEAD -- '*.md' > changed_files.txt
          else
            git ls-tree --name-only -r -z HEAD -- '*.md' > changed_files.txt
          fi

          # Display file names and send contents using curl
          while IFS= read -r -d '' file; do
            if [[ -n "$file" ]]; then
              echo "Processing file: $file"
              content=$(git show "HEAD:$file" | jq -sR .)
              links=$(./script/find-links "$file")

              filename=$(basename "$file")
              json_data="{\"file\":\"$filename\",\"path\":\"$file\",\"content\":$content, \"links\": $links}"

              echo "JSON Data: $json_data"
              response=$(curl -s -o /dev/null -w "%{http_code}" -H "Content-Type: application/json" -X POST -d "$json_data" $SEND_NOTES_URL)
              echo "Server response: $response"
              if [ "$response" -ne 200 ]; then
                message="Failed to send notes to server for file $file. Response code: $response"
                echo "$message"
                exit 1
              fi
              echo ""
            fi
          done < changed_files.txt
